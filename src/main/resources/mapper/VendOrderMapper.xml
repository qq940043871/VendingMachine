<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vend.dao.VendOrderMapper" >
  <resultMap id="BaseResultMap" type="vend.entity.VendOrder" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="machine_code" property="machineCode" jdbcType="VARCHAR" />
    <result column="usercode" property="usercode" jdbcType="VARCHAR" />
    <result column="shopusercode" property="shopusercode" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="free_status" property="freeStatus" jdbcType="VARCHAR" />
    <result column="orderstate" property="orderstate" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="heat" property="heat" jdbcType="VARCHAR" />
    <result column="coupon_id" property="couponId" jdbcType="VARCHAR" />
    <result column="extend1" property="extend1" jdbcType="VARCHAR" />
    <result column="extend2" property="extend2" jdbcType="VARCHAR" />
    <result column="extend3" property="extend3" jdbcType="VARCHAR" />
    <result column="extend4" property="extend4" jdbcType="VARCHAR" />
    <result column="extend5" property="extend5" jdbcType="VARCHAR" />
    <result column="extend6" property="extend6" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, machine_code, usercode, shopusercode, goods_id, pay_type, num, amount, 
    free_status, orderstate, create_time, pay_time, heat, coupon_id, extend1, extend2, 
    extend3, extend4, extend5, extend6
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from vend_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from vend_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="vend.entity.VendOrder" >
    insert into vend_order (order_id, machine_code, usercode, 
      shopusercode, goods_id, pay_type, 
      num, amount, free_status, 
      orderstate, create_time, pay_time, 
      heat, coupon_id, extend1, 
      extend2, extend3, extend4, 
      extend5, extend6)
    values (#{orderId,jdbcType=VARCHAR}, #{machineCode,jdbcType=VARCHAR}, #{usercode,jdbcType=VARCHAR}, 
      #{shopusercode,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{payType,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{freeStatus,jdbcType=VARCHAR}, 
      #{orderstate,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{heat,jdbcType=VARCHAR}, #{couponId,jdbcType=VARCHAR}, #{extend1,jdbcType=VARCHAR}, 
      #{extend2,jdbcType=VARCHAR}, #{extend3,jdbcType=VARCHAR}, #{extend4,jdbcType=VARCHAR}, 
      #{extend5,jdbcType=VARCHAR}, #{extend6,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="vend.entity.VendOrder" >
    insert into vend_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="machineCode != null" >
        machine_code,
      </if>
      <if test="usercode != null" >
        usercode,
      </if>
      <if test="shopusercode != null" >
        shopusercode,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="freeStatus != null" >
        free_status,
      </if>
      <if test="orderstate != null" >
        orderstate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="heat != null" >
        heat,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="extend1 != null" >
        extend1,
      </if>
      <if test="extend2 != null" >
        extend2,
      </if>
      <if test="extend3 != null" >
        extend3,
      </if>
      <if test="extend4 != null" >
        extend4,
      </if>
      <if test="extend5 != null" >
        extend5,
      </if>
      <if test="extend6 != null" >
        extend6,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="machineCode != null" >
        #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="shopusercode != null" >
        #{shopusercode,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="freeStatus != null" >
        #{freeStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderstate != null" >
        #{orderstate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="heat != null" >
        #{heat,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null" >
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        #{extend3,jdbcType=VARCHAR},
      </if>
      <if test="extend4 != null" >
        #{extend4,jdbcType=VARCHAR},
      </if>
      <if test="extend5 != null" >
        #{extend5,jdbcType=VARCHAR},
      </if>
      <if test="extend6 != null" >
        #{extend6,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vend.entity.VendOrder" >
    update vend_order
    <set >
      <if test="machineCode != null" >
        machine_code = #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="usercode != null" >
        usercode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="shopusercode != null" >
        shopusercode = #{shopusercode,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="freeStatus != null" >
        free_status = #{freeStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderstate != null" >
        orderstate = #{orderstate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="heat != null" >
        heat = #{heat,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null" >
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null" >
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null" >
        extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
      <if test="extend4 != null" >
        extend4 = #{extend4,jdbcType=VARCHAR},
      </if>
      <if test="extend5 != null" >
        extend5 = #{extend5,jdbcType=VARCHAR},
      </if>
      <if test="extend6 != null" >
        extend6 = #{extend6,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="vend.entity.VendOrder" >
    update vend_order
    set machine_code = #{machineCode,jdbcType=VARCHAR},
      usercode = #{usercode,jdbcType=VARCHAR},
      shopusercode = #{shopusercode,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      free_status = #{freeStatus,jdbcType=VARCHAR},
      orderstate = #{orderstate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      heat = #{heat,jdbcType=VARCHAR},
      coupon_id = #{couponId,jdbcType=VARCHAR},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      extend3 = #{extend3,jdbcType=VARCHAR},
      extend4 = #{extend4,jdbcType=VARCHAR},
      extend5 = #{extend5,jdbcType=VARCHAR},
      extend6 = #{extend6,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
   <!-- 一下为自定义方法 -->
  <select id="listVendOrder" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from vend_order
	<where>
		<if test="vendOrder.usercode != null and !&quot;&quot;.equals(vendOrder.usercode.trim())">
			and usercode = #{vendOrder.usercode}
		</if>
		<if test="vendOrder.shopusercode != null and !&quot;&quot;.equals(vendOrder.shopusercode.trim())">
			and shopusercode = #{vendOrder.shopusercode}
		</if>
		<if test="vendOrder.freeStatus != null and !&quot;&quot;.equals(vendOrder.freeStatus.trim())">
			and free_status = #{vendOrder.freeStatus}
		</if>
		<if test="vendOrder.extend1 != null and !&quot;&quot;.equals(vendOrder.extend1.trim())">
			and extend1 = #{vendOrder.extend1}
		</if>
		<if test="vendOrder.goodsId != null and !&quot;&quot;.equals(vendOrder.goodsId.trim())">
			and goods_id = #{vendOrder.goodsId}
		</if>
		<if test="vendOrder.machineCode != null and !&quot;&quot;.equals(vendOrder.machineCode.trim())">
			and machine_code = #{vendOrder.machineCode}
		</if>
		<if test="beginTime!=null and !&quot;&quot;.equals(beginTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')>=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
        <if test="endTime!=null and !&quot;&quot;.equals(endTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')<=  DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
	</where>order by create_time desc limit #{page.dbIndex},#{page.dbNumber}
  </select>
  
   <select id="selectByParams" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from vend_order
	<where>
	    and machine_code in
		<foreach item="item" collection="mochinecodeArray" open="(" separator="," close=")">
	            #{item}
	    </foreach>
		<if test="vendOrder.usercode != null and !&quot;&quot;.equals(vendOrder.usercode.trim())">
			and usercode = #{vendOrder.usercode}
		</if>
		<if test="vendOrder.shopusercode != null and !&quot;&quot;.equals(vendOrder.shopusercode.trim())">
			and shopusercode = #{vendOrder.shopusercode}
		</if>
		<if test="vendOrder.freeStatus != null and !&quot;&quot;.equals(vendOrder.freeStatus.trim())">
			and free_status = #{vendOrder.freeStatus}
		</if>
		<if test="vendOrder.extend1 != null and !&quot;&quot;.equals(vendOrder.extend1.trim())">
			and extend1 = #{vendOrder.extend1}
		</if>
		<if test="vendOrder.goodsId != null and !&quot;&quot;.equals(vendOrder.goodsId.trim())">
			and goods_id = #{vendOrder.goodsId}
		</if>
		<if test="vendOrder.machineCode != null and !&quot;&quot;.equals(vendOrder.machineCode.trim())">
			and machine_code = #{vendOrder.machineCode}
		</if>
		<if test="beginTime!=null and !&quot;&quot;.equals(beginTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')>=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
        <if test="endTime!=null and !&quot;&quot;.equals(endTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')<=  DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
	</where>
  </select>
  
  <select id="selectByParams1" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from vend_order
	<where>
	    and machine_code in ('')
		<if test="vendOrder.usercode != null and !&quot;&quot;.equals(vendOrder.usercode.trim())">
			and usercode = #{vendOrder.usercode}
		</if>
		<if test="vendOrder.shopusercode != null and !&quot;&quot;.equals(vendOrder.shopusercode.trim())">
			and shopusercode = #{vendOrder.shopusercode}
		</if>
		<if test="vendOrder.freeStatus != null and !&quot;&quot;.equals(vendOrder.freeStatus.trim())">
			and free_status = #{vendOrder.freeStatus}
		</if>
		<if test="vendOrder.extend1 != null and !&quot;&quot;.equals(vendOrder.extend1.trim())">
			and extend1 = #{vendOrder.extend1}
		</if>
		<if test="vendOrder.goodsId != null and !&quot;&quot;.equals(vendOrder.goodsId.trim())">
			and goods_id = #{vendOrder.goodsId}
		</if>
		<if test="vendOrder.machineCode != null and !&quot;&quot;.equals(vendOrder.machineCode.trim())">
			and machine_code = #{vendOrder.machineCode}
		</if>
		<if test="beginTime!=null and !&quot;&quot;.equals(beginTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')>=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
        <if test="endTime!=null and !&quot;&quot;.equals(endTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')<=  DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
	</where>
  </select>
  
  <select id="countVendOrder" resultType="int">
 	select count(*) from vend_order
 	<where>
 		<if test="vendOrder.usercode != null and !&quot;&quot;.equals(vendOrder.usercode.trim())">
			and usercode = #{vendOrder.usercode}
		</if>
		<if test="vendOrder.shopusercode != null and !&quot;&quot;.equals(vendOrder.shopusercode.trim())">
			and shopusercode = #{vendOrder.shopusercode}
		</if>
		<if test="vendOrder.freeStatus != null and !&quot;&quot;.equals(vendOrder.freeStatus.trim())">
			and free_status = #{vendOrder.freeStatus}
		</if>
		<if test="vendOrder.extend1 != null and !&quot;&quot;.equals(vendOrder.extend1.trim())">
			and extend1 = #{vendOrder.extend1}
		</if>
		<if test="vendOrder.goodsId != null and !&quot;&quot;.equals(vendOrder.goodsId.trim())">
			and goods_id = #{vendOrder.goodsId}
		</if>
		<if test="vendOrder.machineCode != null and !&quot;&quot;.equals(vendOrder.machineCode.trim())">
			and machine_code = #{vendOrder.machineCode}
		</if>
		<if test="beginTime!=null and !&quot;&quot;.equals(beginTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')>=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
        <if test="endTime!=null and !&quot;&quot;.equals(endTime.trim())">
          <![CDATA[   and DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%S')<=  DATE_FORMAT(#{endTime}, '%Y-%m-%d %H:%i:%S')   ]]>
        </if>
 	</where>
  </select>
  
   <select id="findAll" resultMap="BaseResultMap">
 	select * from vend_order
  </select>
  <!-- 批量删除 -->
    <delete id="deleteBatch" parameterType="int">
        delete from vend_order where order_id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>